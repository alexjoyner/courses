{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";AAUA,MAAM,cAAc;IAApB;QACS,gBAAW,GAAW,CAAC,CAAC;QACxB,cAAS,GAAe,EAAE,CAAC;IAmBpC,CAAC;IAjBA,cAAc,CAAC,IAAY;QAC1B,OAAO,CAAC,GAAG,CAAC,kCAAkC,GAAG,IAAI,CAAC,CAAC;QACvD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,eAAe,EAAE,CAAC;IACxB,CAAC;IACD,gBAAgB,CAAC,CAAW;QAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC;IACD,cAAc,CAAC,CAAW;QACzB,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACtC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACjC,CAAC;IACD,eAAe;QACd,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;YAC7B,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACJ,CAAC;CACD;AAED,MAAM,kBAAkB;IAEvB,YAAY,cAA8B;QACzC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAA;QACpC,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC;IACD,MAAM,CAAC,WAAmB;QACzB,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC;IAC5C,CAAC;CACD;AAED,MAAM,GAAG;IACR,YAAY,cAA8B;QACzC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IACD,MAAM,CAAC,WAAmB;QACzB,WAAW,GAAG,EAAE;YACf,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC;YAC3C,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;IAChD,CAAC;CACD;AAED,IAAI,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC;AAC1C,IAAI,kBAAkB,GAAG,IAAI,kBAAkB,CAAC,cAAc,CAAC,CAAC;AAChE,IAAI,mBAAmB,GAAG,IAAI,kBAAkB,CAAC,cAAc,CAAC,CAAC;AACjE,cAAc,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAA;AAEjD,cAAc,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;AAClC,cAAc,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC","sourcesContent":["// Observers can only subscribe to Subjects\r\ninterface ObserverSubject {\r\n\tregisterObserver(o: Observer): void;\r\n\tremoveObserver(o: Observer): void;\r\n\tnotifyObservers(): void;\r\n}\r\ninterface Observer {\r\n\tupdate(data: any): void;\r\n}\r\n\r\nclass WeatherStation implements ObserverSubject {\r\n\tprivate temperature: number = 0;\r\n\tprivate observers: Observer[] = [];\r\n\r\n\tsetTemperature(temp: number) {\r\n\t\tconsole.log(\"WeatherStation: new temperature \" + temp);\r\n\t\tthis.temperature = temp;\r\n\t\tthis.notifyObservers();\r\n\t}\r\n\tregisterObserver(o: Observer): void {\r\n\t\tthis.observers.push(o);\r\n\t}\r\n\tremoveObserver(o: Observer): void {\r\n\t\tlet index = this.observers.indexOf(o);\r\n\t\tthis.observers.splice(index, 1);\r\n\t}\r\n\tnotifyObservers(): void {\r\n\t\tthis.observers.map(observer => {\r\n\t\t\tobserver.update(this.temperature);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nclass TemperatureDisplay implements Observer {\r\n\tprivate weatherStation: WeatherStation;\r\n\tconstructor(weatherStation: WeatherStation) {\r\n\t\tthis.weatherStation = weatherStation\r\n\t\tthis.weatherStation.registerObserver(this);\r\n\t}\r\n\tupdate(temperature: number): void {\r\n\t\tconsole.log(\"Current Temp: \", temperature);\r\n\t}\r\n}\r\n\r\nclass Fan implements Observer {\r\n\tconstructor(weatherStation: WeatherStation) {\r\n\t\tweatherStation.registerObserver(this);\r\n\t}\r\n\tupdate(temperature: number): void {\r\n\t\ttemperature > 25\r\n\t\t\t? console.log(\"It's hot... Turning Fan On\")\r\n\t\t\t: console.log(\"It's cold... Turning Fan Off\");\r\n\t}\r\n}\r\n\r\nlet weatherStation = new WeatherStation();\r\nlet temperatureDisplay = new TemperatureDisplay(weatherStation);\r\nlet temperatureDisplay2 = new TemperatureDisplay(weatherStation);\r\nweatherStation.removeObserver(temperatureDisplay)\r\n\r\nweatherStation.setTemperature(20);\r\nweatherStation.setTemperature(40);\r\n"]}